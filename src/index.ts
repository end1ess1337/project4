import { ethers } from 'ethers';
import * as readlineSync from 'readline-sync';

// C·∫•u h√¨nh k·∫øt n·ªëi ƒë·∫øn m·∫°ng Ronin Saigon testnet
const RONIN_RPC_URL = 'https://saigon-testnet.roninchain.com/rpc';

/**
 * Ki·ªÉm tra t√≠nh h·ª£p l·ªá c·ªßa ƒë·ªãa ch·ªâ v√≠ EVM
 * @param address ƒê·ªãa ch·ªâ v√≠ c·∫ßn ki·ªÉm tra
 * @returns true n·∫øu ƒë·ªãa ch·ªâ h·ª£p l·ªá, false n·∫øu kh√¥ng h·ª£p l·ªá
 */
function isValidEVMAddress(address: string): boolean {
    return ethers.isAddress(address);
}

/**
 * Chuy·ªÉn ƒë·ªïi s·ªë Wei sang RON
 * @param balanceInWei S·ªë d∆∞ d·∫°ng Wei
 * @returns S·ªë d∆∞ d·∫°ng RON v·ªõi ƒë·ªãnh d·∫°ng d·ªÖ ƒë·ªçc
 */
function formatBalance(balanceInWei: bigint): string {
    return ethers.formatEther(balanceInWei);
}

/**
 * H√†m ch√≠nh ƒë·ªÉ ki·ªÉm tra s·ªë d∆∞ v√≠
 */
async function main() {
    try {
        // T·∫°o k·∫øt n·ªëi ƒë·∫øn m·∫°ng Ronin
        const provider = new ethers.JsonRpcProvider(RONIN_RPC_URL);

        // Ki·ªÉm tra k·∫øt n·ªëi
        try {
            await provider.getNetwork();
        } catch (error) {
            console.error('‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn m·∫°ng Ronin Saigon. Vui l√≤ng ki·ªÉm tra k·∫øt n·ªëi internet.');
            return;
        }

        // Nh·∫≠p ƒë·ªãa ch·ªâ v√≠ t·ª´ ng∆∞·ªùi d√πng
        const walletAddress = readlineSync.question('nhap dia chi vi (bat dau bang 0x): ');

        // Ki·ªÉm tra t√≠nh h·ª£p l·ªá c·ªßa ƒë·ªãa ch·ªâ
        if (!isValidEVMAddress(walletAddress)) {
            console.error('‚ùå ƒê·ªãa ch·ªâ v√≠ kh√¥ng h·ª£p l·ªá. Vui l√≤ng ki·ªÉm tra l·∫°i.');
            return;
        }

        // L·∫•y s·ªë d∆∞ c·ªßa v√≠
        const balanceInWei = await provider.getBalance(walletAddress);
        const balanceInRON = formatBalance(balanceInWei);

        // Hi·ªÉn th·ªã k·∫øt qu·∫£
        console.log('\nüìä Th√¥ng tin s·ªë d∆∞:');
        console.log(`dia chi vi: ${walletAddress}`);
        console.log(`So du: ${balanceInRON} RON`);

    } catch (error) {
        console.error('‚ùå ƒê√£ x·∫£y ra l·ªói:', error instanceof Error ? error.message : 'L·ªói kh√¥ng x√°c ƒë·ªãnh');
    }
}

// Ch·∫°y ch∆∞∆°ng tr√¨nh
main();